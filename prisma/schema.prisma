// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                Int      @id @default(autoincrement())
  name              String
  providerAccountId Int
  email             String   @unique
  profilePic        String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  posts       Post[]
  postComment PostComment[]
  favorites   PostFavorite[]
  votes       PostLike[]
}

model Post {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  description String
  content     String   @db.Text
  readingTime Int
  views       Int      @default(0)
  totalLikes  Int      @default(0)
  published   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user       User           @relation(fields: [userId], references: [id])
  categories PostCategory[]
  comments   PostComment[]
  favorites  PostFavorite[]
  votes      PostLike[]

  @@index([userId])
}

model PostCategory {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String

  posts Post[]
}

model PostComment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  @@index([userId])
  @@index([postId])
}

model PostFavorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  @@index([userId])
  @@index([postId])
}

model PostLike {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
  @@index([postId])
}
